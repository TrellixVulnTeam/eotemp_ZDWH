{"remainingRequest":"/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/thread-loader/dist/cjs.js!/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/babel-loader/lib/index.js!/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/js/Google Drive/_Github/github_upload/eotemp/src/components/DataPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/js/Google Drive/_Github/github_upload/eotemp/src/components/DataPanel.vue","mtime":1624532486000},{"path":"/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/js/Google Drive/_Github/github_upload/eotemp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}